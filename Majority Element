/*Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.
*/
class Solution {
    public int majorityElement(int[] nums) {
       int n= nums.length;
        double freq = n/2;
        int best=0;
       
        HashMap<Integer,Integer> mymap = new HashMap<Integer,Integer>();
        for(int i=0;i<n;i++)
        {
            if(mymap.containsKey(nums[i]))
                mymap.put(nums[i],mymap.get(nums[i])+1);
               // count++;
            else
                mymap.put(nums[i],1);
        }
        for(Integer x : mymap.keySet())
        {
            if(mymap.get(x)>freq)
                best = x;
        }
        return best; 
    }
}
